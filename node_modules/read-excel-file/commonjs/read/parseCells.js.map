{"version":3,"file":"parseCells.js","names":["parseCells","sheet","xml","values","styles","properties","options","cells","getCells","length","map","node","parseCell"],"sources":["../../source/read/parseCells.js"],"sourcesContent":["import parseCell from './parseCell.js'\r\n\r\nimport {\r\n  getCells,\r\n  getMergedCells\r\n} from '../xml/xlsx.js'\r\n\r\nexport default function parseCells(sheet, xml, values, styles, properties, options) {\r\n  const cells = getCells(sheet)\r\n\r\n  if (cells.length === 0) {\r\n    return []\r\n  }\r\n\r\n  // const mergedCells = getMergedCells(sheet)\r\n  // for (const mergedCell of mergedCells) {\r\n  //   const [from, to] = mergedCell.split(':').map(parseCellCoordinates)\r\n  //   console.log('Merged Cell.', 'From:', from, 'To:', to)\r\n  // }\r\n\r\n  return cells.map((node) => {\r\n    return parseCell(node, sheet, xml, values, styles, properties, options)\r\n  })\r\n}"],"mappings":";;;;;;;AAAA;;AAEA;;;;AAKe,SAASA,UAAT,CAAoBC,KAApB,EAA2BC,GAA3B,EAAgCC,MAAhC,EAAwCC,MAAxC,EAAgDC,UAAhD,EAA4DC,OAA5D,EAAqE;EAClF,IAAMC,KAAK,GAAG,IAAAC,cAAA,EAASP,KAAT,CAAd;;EAEA,IAAIM,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;IACtB,OAAO,EAAP;EACD,CALiF,CAOlF;EACA;EACA;EACA;EACA;;;EAEA,OAAOF,KAAK,CAACG,GAAN,CAAU,UAACC,IAAD,EAAU;IACzB,OAAO,IAAAC,qBAAA,EAAUD,IAAV,EAAgBV,KAAhB,EAAuBC,GAAvB,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,UAA5C,EAAwDC,OAAxD,CAAP;EACD,CAFM,CAAP;AAGD"}