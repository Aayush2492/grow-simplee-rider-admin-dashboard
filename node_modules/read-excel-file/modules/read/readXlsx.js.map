{"version":3,"file":"readXlsx.js","names":["parseProperties","parseFilePaths","parseStyles","parseSharedStrings","parseSheet","getData","readXlsx","contents","xml","options","sheet","getXmlFileContent","filePath","Error","filePaths","values","sharedStrings","styles","properties","getSheets","sheets","map","name","sheetId","getSheetId","createSheetNotFoundError","data","_sheet","relationId","sheetsList","i","join"],"sources":["../../source/read/readXlsx.js"],"sourcesContent":["import parseProperties from './parseProperties.js'\r\nimport parseFilePaths from './parseFilePaths.js'\r\nimport parseStyles from './parseStyles.js'\r\nimport parseSharedStrings from './parseSharedStrings.js'\r\nimport parseSheet from './parseSheet.js'\r\nimport getData from './getData.js'\r\n\r\n// For an introduction in reading `*.xlsx` files see \"The minimum viable XLSX reader\":\r\n// https://www.brendanlong.com/the-minimum-viable-xlsx-reader.html\r\n\r\n/**\r\n * Reads an (unzipped) XLSX file structure into a 2D array of cells.\r\n * @param  {object} contents - A list of XML files inside XLSX file (which is a zipped directory).\r\n * @param  {number?} options.sheet - Workbook sheet id (`1` by default).\r\n * @param  {string?} options.dateFormat - Date format, e.g. \"mm/dd/yyyy\". Values having this format template set will be parsed as dates.\r\n * @param  {object} contents - A list of XML files inside XLSX file (which is a zipped directory).\r\n * @return {object} An object of shape `{ data, cells, properties }`. `data: string[][]` is an array of rows, each row being an array of cell values. `cells: string[][]` is an array of rows, each row being an array of cells. `properties: object` is the spreadsheet properties (e.g. whether date epoch is 1904 instead of 1900).\r\n */\r\nexport default function readXlsx(contents, xml, options = {}) {\r\n  if (!options.sheet) {\r\n    options = {\r\n      sheet: 1,\r\n      ...options\r\n    }\r\n  }\r\n\r\n  const getXmlFileContent = (filePath) => {\r\n    if (!contents[filePath]) {\r\n      throw new Error(`\"${filePath}\" file not found inside the *.xlsx file zip archive`)\r\n    }\r\n    return contents[filePath]\r\n  }\r\n\r\n  // Some Excel editors don't want to use standard naming scheme for sheet files.\r\n  // https://github.com/tidyverse/readxl/issues/104\r\n  const filePaths = parseFilePaths(getXmlFileContent('xl/_rels/workbook.xml.rels'), xml)\r\n\r\n  // Default file path for \"shared strings\": \"xl/sharedStrings.xml\".\r\n  const values = filePaths.sharedStrings\r\n    ? parseSharedStrings(getXmlFileContent(filePaths.sharedStrings), xml)\r\n    : []\r\n\r\n  // Default file path for \"styles\": \"xl/styles.xml\".\r\n  const styles = filePaths.styles\r\n    ? parseStyles(getXmlFileContent(filePaths.styles), xml)\r\n    : {}\r\n\r\n  const properties = parseProperties(getXmlFileContent('xl/workbook.xml'), xml)\r\n\r\n  // A feature for getting the list of sheets in an Excel file.\r\n  // https://github.com/catamphetamine/read-excel-file/issues/14\r\n  if (options.getSheets) {\r\n    return properties.sheets.map(({ name }) => ({\r\n      name\r\n    }))\r\n  }\r\n\r\n  // Find the sheet by name, or take the first one.\r\n  const sheetId = getSheetId(options.sheet, properties.sheets)\r\n\r\n  // If the sheet wasn't found then throw an error.\r\n  // Example: \"xl/worksheets/sheet1.xml\".\r\n  if (!sheetId || !filePaths.sheets[sheetId]) {\r\n    throw createSheetNotFoundError(options.sheet, properties.sheets)\r\n  }\r\n\r\n  // Parse sheet data.\r\n  const sheet = parseSheet(\r\n    getXmlFileContent(filePaths.sheets[sheetId]),\r\n    xml,\r\n    values,\r\n    styles,\r\n    properties,\r\n    options\r\n  )\r\n\r\n  // Get spreadsheet data.\r\n  const data = getData(sheet, options)\r\n\r\n  // Can return properties, if required.\r\n  if (options.properties) {\r\n    return {\r\n      data,\r\n      properties\r\n    }\r\n  }\r\n\r\n  // Return spreadsheet data.\r\n  return data\r\n}\r\n\r\nfunction getSheetId(sheet, sheets) {\r\n  if (typeof sheet === 'number') {\r\n    const _sheet = sheets[sheet - 1]\r\n    return _sheet && _sheet.relationId\r\n  }\r\n  for (const _sheet of sheets) {\r\n    if (_sheet.name === sheet) {\r\n      return _sheet.relationId\r\n    }\r\n  }\r\n}\r\n\r\nfunction createSheetNotFoundError(sheet, sheets) {\r\n  const sheetsList = sheets && sheets.map((sheet, i) => `\"${sheet.name}\" (#${i + 1})`).join(', ')\r\n  return new Error(`Sheet ${typeof sheet === 'number' ? '#' + sheet : '\"' + sheet + '\"'} not found in the *.xlsx file.${sheets ? ' Available sheets: ' + sheetsList + '.' : ''}`)\r\n}"],"mappings":"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"}