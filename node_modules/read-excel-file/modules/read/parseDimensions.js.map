{"version":3,"file":"parseDimensions.js","names":["parseCellCoordinates","getDimensions","parseDimensions","sheet","dimensions","split","map","row","column","length"],"sources":["../../source/read/parseDimensions.js"],"sourcesContent":["import {\r\n  parseCellCoordinates\r\n} from './coordinates.js'\r\n\r\nimport {\r\n  getDimensions\r\n} from '../xml/xlsx.js'\r\n\r\n// `dimensions` defines the spreadsheet area containing all non-empty cells.\r\n// https://docs.microsoft.com/en-us/dotnet/api/documentformat.openxml.spreadsheet.sheetdimension?view=openxml-2.8.1\r\nexport default function parseDimensions(sheet) {\r\n  let dimensions = getDimensions(sheet)\r\n  if (dimensions) {\r\n    dimensions = dimensions.split(':').map(parseCellCoordinates).map(([row, column]) => ({\r\n      row,\r\n      column\r\n    }))\r\n    // Sometimes there can be just a single cell as a spreadsheet's \"dimensions\".\r\n    // For example, the default \"dimensions\" in Apache POI library is \"A1\",\r\n    // meaning that only the first cell in the spreadsheet is used.\r\n    //\r\n    // A quote from Apache POI library:\r\n    // \"Single cell ranges are formatted like single cell references (e.g. 'A1' instead of 'A1:A1').\"\r\n    //\r\n    if (dimensions.length === 1) {\r\n      dimensions = [dimensions[0], dimensions[0]]\r\n    }\r\n    return dimensions\r\n  }\r\n}\r\n\r\n"],"mappings":";;;;;;;;;;;;AAAA,SACEA,oBADF,QAEO,kBAFP;AAIA,SACEC,aADF,QAEO,gBAFP,C,CAIA;AACA;;AACA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;EAC7C,IAAIC,UAAU,GAAGH,aAAa,CAACE,KAAD,CAA9B;;EACA,IAAIC,UAAJ,EAAgB;IACdA,UAAU,GAAGA,UAAU,CAACC,KAAX,CAAiB,GAAjB,EAAsBC,GAAtB,CAA0BN,oBAA1B,EAAgDM,GAAhD,CAAoD;MAAA;MAAA,IAAEC,GAAF;MAAA,IAAOC,MAAP;;MAAA,OAAoB;QACnFD,GAAG,EAAHA,GADmF;QAEnFC,MAAM,EAANA;MAFmF,CAApB;IAAA,CAApD,CAAb,CADc,CAKd;IACA;IACA;IACA;IACA;IACA;IACA;;IACA,IAAIJ,UAAU,CAACK,MAAX,KAAsB,CAA1B,EAA6B;MAC3BL,UAAU,GAAG,CAACA,UAAU,CAAC,CAAD,CAAX,EAAgBA,UAAU,CAAC,CAAD,CAA1B,CAAb;IACD;;IACD,OAAOA,UAAP;EACD;AACF"}