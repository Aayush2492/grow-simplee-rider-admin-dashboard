{"version":3,"file":"String.js","names":["InvalidError","StringType","value","isNaN","isFinite","String"],"sources":["../../source/types/String.js"],"sourcesContent":["import InvalidError from './InvalidError.js'\r\n\r\nexport default function StringType(value) {\r\n  if (typeof value === 'string') {\r\n    return value\r\n  }\r\n  // Excel tends to perform a forced automatic convertion of string-type values\r\n  // to number-type ones when the user has input them. Otherwise, users wouldn't\r\n  // be able to perform formula calculations on those cell values because users\r\n  // won't bother manually choosing a \"numeric\" cell type for each cell, and\r\n  // even if they did, choosing a \"numeric\" cell type every time wouldn't be an\r\n  // acceptable \"user experience\".\r\n  //\r\n  // So, if a cell value is supposed to be a string and Excel has automatically\r\n  // converted it to a number, perform a backwards conversion.\r\n  //\r\n  if (typeof value === 'number') {\r\n    if (isNaN(value)) {\r\n      throw new InvalidError('invalid_number')\r\n    }\r\n    // The global `isFinite()` function filters out:\r\n    // * NaN\r\n    // * -Infinity\r\n    // * Infinity\r\n    //\r\n    // All other values pass (including non-numbers).\r\n    //\r\n    if (!isFinite(value)) {\r\n      throw new InvalidError('out_of_bounds')\r\n    }\r\n    return String(value)\r\n  }\r\n  throw new InvalidError('not_a_string')\r\n}"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,mBAAzB;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;EACxC,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;IAC7B,OAAOA,KAAP;EACD,CAHuC,CAIxC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACA,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;IAC7B,IAAIC,KAAK,CAACD,KAAD,CAAT,EAAkB;MAChB,MAAM,IAAIF,YAAJ,CAAiB,gBAAjB,CAAN;IACD,CAH4B,CAI7B;IACA;IACA;IACA;IACA;IACA;IACA;;;IACA,IAAI,CAACI,QAAQ,CAACF,KAAD,CAAb,EAAsB;MACpB,MAAM,IAAIF,YAAJ,CAAiB,eAAjB,CAAN;IACD;;IACD,OAAOK,MAAM,CAACH,KAAD,CAAb;EACD;;EACD,MAAM,IAAIF,YAAJ,CAAiB,cAAjB,CAAN;AACD"}